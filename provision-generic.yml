---
- name: Setup Jupyter generic classroom
  hosts: hosts
  vars:
    users_json: "{{ lookup('file', 'users/users.json') | from_json }}"
  vars_prompt:
    - name: git_repo
      prompt: Classroom git repository
      default: null
      private: no
    - name: git_branch
      prompt: Checkout branch
      default: "master"
      private: no
  remote_user: root

  tasks:
    - name: Install Git
      ansible.builtin.package:
        name: git
        state: latest

    - name: Checkout classroom repo from GitHub
      ansible.builtin.git:
        repo: "git@github.com:pfe-rs/{{ git_repo }}.git"
        dest: "/srv/classrooms/{{ git_repo }}"
        single_branch: yes
        depth: 1
        version: "{{ git_branch }}"
        key_file: /root/.ssh/id_ed25519
        accept_hostkey: yes
        force: yes

    - name: Check for Python packages
      stat:
        path: "/srv/classrooms/{{ git_repo }}/requirements.txt"
      register: repository_python_packages

    - name: Install required Python packages
      pip:
        executable: pip3
        requirements: "/srv/classrooms/{{ git_repo }}/requirements.txt"
      when: repository_python_packages

    - name: Check for system packages
      stat:
        path: "/srv/classrooms/{{ git_repo }}/packages"
      register: repository_system_packages

    - name: List system packages
      shell: cat "/srv/classrooms/{{ git_repo }}/packages"
      register: system_packages
      when: repository_system_packages

    - debug:
        var: system_packages

    - name: Install system packages
      apt:
        name: "{{ system_packages.stdout_lines }}"
        state: latest
      when: repository_system_packages

    - name: Check for dataset
      stat:
        path: "/srv/classrooms/{{ git_repo }}/dataset"
      register: repository_dataset

    - name: Symlink dataset
      ansible.builtin.file:
        src: "/srv/classrooms/{{ git_repo }}/dataset"
        dest: "/home/{{ item.username }}/dataset"
        owner: root
        group: root
        state: link
      with_items: "{{ users_json }}"
      when: repository_dataset.stat.exists and repository_dataset.stat.isdir

    - name: Check for notebooks
      stat:
        path: "/srv/classrooms/{{ git_repo }}/notebooks"
      register: repository_notebooks

    - name: Copy shared notebooks
      ansible.builtin.copy:
        src: "/srv/classrooms/{{ git_repo }}/notebooks/"
        dest: "/home/{{ item.username }}"
        owner: "{{ item.username }}"
        group: "{{ item.username }}"
        mode: "0750"
        remote_src: yes
      with_items: "{{ users_json }}"
      when: repository_notebooks.stat.exists and repository_notebooks.stat.isdir

    - name: Rebuild JupyterLab
      ansible.builtin.command: jupyter lab build --dev-build=False --minimize=True

    - name: Restart JupyterLab server
      systemd:
        state: restarted
        name: jupyterhub
